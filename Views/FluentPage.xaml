<Page
    x:Class="Fluetro.FluentPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Fluetro"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:syncfusion="using:Syncfusion.Windows.PdfViewer" 
        xmlns:hsvColorPickers="using:HSVColorPickers"
    xmlns:converter="using:Fluetro.Converters"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls" xmlns:notification="using:Syncfusion.UI.Xaml.Controls.Notification" xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls" xmlns:i="using:Microsoft.Xaml.Interactivity" xmlns:icore="using:Microsoft.Xaml.Interactions.Core" xmlns:icons="using:Fluent.Icons"
    mc:Ignorable="d"
      extensions:TitleBarExtensions.BackgroundColor="#111111"
    extensions:TitleBarExtensions.ButtonBackgroundColor="#111111"
    extensions:TitleBarExtensions.ButtonForegroundColor="Gray"
   Background="#111111">
    <Page.Resources>
        <ResourceDictionary>
            <converter:StringToPdfPageViewModeValueConverter x:Key="stringToPageViewModeConverter"/>
            <converter:ColorToBrushConverter x:Key="ColorToSolidBrushConverter"/>
            <converter:NullableBooleanToBooleanConverter x:Key="NullBoolToBoolConverter"/>
        </ResourceDictionary>
    </Page.Resources>
    <Grid HorizontalAlignment="Center" Margin="0, 30, 0, 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="94"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Pivot Background="#111111" Canvas.ZIndex="2" Grid.Row="0">
            <PivotItem Margin="12,0,0,0">
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <icons:FluentIconElement Symbol="Home24" Margin="0, 4, 0, 0"/>
                        <TextBlock FontSize="18" Margin="8, 5, 0, 0">Home</TextBlock>
                    </StackPanel>
                </PivotItem.Header>
                <StackPanel Margin="-12, 4, 0, 0" Orientation="Horizontal" x:Name="HomeBar" Background="#1C1C1C">
                    <ToggleButton x:Name="BookMarkButton" IsChecked="{x:Bind SplitPdfView.IsPaneOpen, Mode=OneWay}" Background="Transparent" Margin="8, 0, 4, 0">
                        <ToggleButton.Content>
                            <icons:FluentIconElement Symbol="Bookmark24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 0, 4, 0" />
                        </ToggleButton.Content>
                        <ToggleButton.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ToggleButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="White"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </ToggleButton.Resources>
                    </ToggleButton>
                    <Button Command="{Binding ElementName=pdfViewer, Path=PreviousPageCommand}" Background="Transparent" Margin="0, 0, 4, 0">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="ChevronLeft24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 0, 4, 0"/>
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <Button Command="{Binding ElementName=pdfViewer, Path=NextPageCommand}" Background="Transparent" Margin="4, 0, 0, 0">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="ChevronRight24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 0, 4, 0"/>
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <AppBarSeparator/>
                    <controls:DropShadowPanel
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BlurRadius="8"
                        IsMasked="True"
                        OffsetX="0"
                        OffsetY="6.54"
                        ShadowOpacity="0.06"
                        Color="Black">
                        <AutoSuggestBox Margin="5"  Text="{x:Bind pdfViewer.PageNumber, Mode=OneWay}" VerticalAlignment="Center"   
                            Background="{ThemeResource SystemAltMediumHighColor}"
                            BorderThickness="0"
                            Foreground="{ThemeResource SystemBaseHighColor}">
                            <i:Interaction.Behaviors>
                                <icore:EventTriggerBehavior EventName="QuerySubmitted">
                                    <icore:InvokeCommandAction Command="{x:Bind ViewModel.PositionUpdatedCommand}" />
                                </icore:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AutoSuggestBox>
                    </controls:DropShadowPanel>
                    <TextBlock Margin="5" Text="of" VerticalAlignment="Center"/>
                    <TextBlock Margin="5" Text="{x:Bind pdfViewer.PageCount, Mode=OneWay}" VerticalAlignment="Center"/>
                    <AppBarSeparator/>

                    <Button Command="{Binding ElementName=pdfViewer, Path=IncreaseZoomCommand}" Background="Transparent"  Margin="0, 0, 4, 0">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="ZoomIn24" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <TextBlock Margin="5, 5, 0, 5" Text="{x:Bind pdfViewer.Zoom, Mode=OneWay}" VerticalAlignment="Center"/>
                    <TextBlock Margin="0, 5, 5, 5" Text="%" VerticalAlignment="Center"/>
                    <Button Command="{Binding ElementName=pdfViewer, Path=DecreaseZoomCommand}" Background="Transparent"  Margin="4, 0, 0, 0">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="ZoomOut24" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <AppBarSeparator/>
                    <Button Command="{Binding ElementName=pdfViewer, Path=FirstPageCommand}" Background="Transparent" Margin="0, 0, 4, 0">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                            <icons:FluentIconElement Symbol="ChevronUp24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 0, 6, 4"/>
                                <TextBlock>First page</TextBlock>
                            </StackPanel>
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <Button Command="{Binding ElementName=pdfViewer, Path=LastPageCommand}" Background="Transparent" Margin="4, 0, 0, 0">
                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <icons:FluentIconElement Symbol="ChevronDown24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0, 0, 6, 4"/>
                                <TextBlock>Last page</TextBlock>
                            </StackPanel>
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <AppBarSeparator/>
                    <controls:DropShadowPanel
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BlurRadius="8"
                        IsMasked="True"
                        OffsetX="0"
                        OffsetY="6.54"
                        ShadowOpacity="0.15"
                        Color="Black">
                        <ComboBox x:Name="ViewBox" SelectedIndex="0" VerticalAlignment="Center" Width="120"   
                            Background="{ThemeResource SystemAltMediumHighColor}"
                            BorderThickness="0"
                            Foreground="{ThemeResource SystemBaseHighColor}"
                            PlaceholderForeground="{ThemeResource SystemBaseMediumColor}">
                            <x:String>Normal</x:String>
                            <x:String>One page</x:String>
                            <x:String>Fit</x:String>
                        </ComboBox>
                    </controls:DropShadowPanel>
                    <AppBarSeparator/>
                    <Button Command="{x:Bind ViewModel.OpenFileCommand}" Background="Transparent"  Margin="0, 0, 4, 0">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="FolderOpen24" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <Button Command="{x:Bind ViewModel.SaveAsFileCommand}" Background="Transparent" Margin="4, 0, 4, 0">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="SaveAs24" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <Button Command="{Binding ElementName=pdfViewer, Path=PrintCommand}" Margin="4, 0, 4, 0" Background="Transparent">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="Print24" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>

                </StackPanel>
            </PivotItem>
            <PivotItem Margin="12,0,0,0">
                <PivotItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <icons:FluentIconElement Symbol="DrawText24" Margin="0, 4, 0, 0"/>
                        <TextBlock FontSize="18" Margin="8, 5, 0, 0">Annotations</TextBlock>
                    </StackPanel>
                </PivotItem.Header>
                <StackPanel Orientation="Horizontal" x:Name="InkBar" Margin="-12, 4, 0, 0" Background="#1C1C1C">
                    <Button Command="{Binding ElementName=pdfViewer, Path=UndoCommand}" Background="Transparent" Margin="8, 0, 8, 0">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="ArrowUndo20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <Button Command="{Binding ElementName=pdfViewer, Path=RedoCommand}" Background="Transparent">
                        <Button.Content>
                            <icons:FluentIconElement Symbol="ArrowRedo20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button.Content>
                        <Button.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Light">
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Button.Resources>
                    </Button>
                    <AppBarSeparator/>
                    <ToggleSplitButton CornerRadius="4" Command="{x:Bind ViewModel.InkCommand}" IsChecked="{Binding Ink, Mode=TwoWay}" Background="Transparent">
                        <icons:FluentIconElement Symbol="InkingTool24" />
                        <ToggleSplitButton.Flyout>
                            <Flyout Placement="Bottom">
                                <StackPanel>
                                    <!-- Two way means the viewmodel bool gets updated by the view-->
                                    <controls:ColorPicker x:Name="ColorPicker" Background="Transparent" Color="{x:Bind ViewModel.InkColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ColorChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.InkColorCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </controls:ColorPicker>
                                    <Slider x:Name="ThiccSlider" Header="Size:" Margin="5" Width="250" Minimum="1" Maximum="50" Value="10">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.SizeInkSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                    <Slider x:Name="OpacitySlider" Margin="5" Header="Opacity:" Width="250" Minimum="0" Maximum="1" Value="1" StepFrequency="0.05">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.OpacityInkSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                    <ToggleSwitch x:Name="NativeInk" OffContent="Low performance" Header="Mode" OnContent="High performance" IsOn="{x:Bind ViewModel._NativeInk, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                        <!-- Toggled is an event so cant bind directly to a command. This code fixes it-->
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="Toggled">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.InkPerformanceCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </ToggleSwitch>
                                </StackPanel>
                            </Flyout>
                        </ToggleSplitButton.Flyout>
                    </ToggleSplitButton>
                    <AppBarSeparator/>
                    <ToggleSplitButton CornerRadius="4" Margin="0, 0, 4, 0" x:Name="RectangleToggle" Tag="Rectangle"  Command="{x:Bind ViewModel.RectangleCommand}" IsChecked="{Binding Rectangle, Mode=TwoWay}" Background="Transparent">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE739;"/>
                        <ToggleSplitButton.Flyout>
                            <Flyout Placement="Bottom">
                                <StackPanel>
                                    <!-- Two way means the viewmodel bool gets updated by the view-->
                                    <controls:ColorPicker Background="Transparent" Color="{x:Bind ViewModel.RectangleColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ColorChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.RectangleColorCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </controls:ColorPicker>
                                    <Slider Header="Size:" Margin="5" Width="250" Minimum="1" Maximum="50" Value="10">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.SizeRectangleSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                    <Slider Margin="5" Header="Opacity:" Width="250" Minimum="0" Maximum="1" Value="1" StepFrequency="0.05">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.OpacityRectangleSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                </StackPanel>
                            </Flyout>
                        </ToggleSplitButton.Flyout>
                    </ToggleSplitButton>
                    <ToggleSplitButton Margin="4, 0, 4, 0" CornerRadius="4" x:Name="LineToggle" Tag="Line"  Command="{x:Bind ViewModel.lineCommand}" IsChecked="{Binding Line, Mode=TwoWay}" Background="Transparent">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xF462;"/>
                        <ToggleSplitButton.Flyout>
                            <Flyout Placement="Bottom">
                                <StackPanel>
                                    <!-- Two way means the viewmodel bool gets updated by the view-->
                                    <controls:ColorPicker Background="Transparent" Color="{x:Bind ViewModel.LineColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ColorChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.LineColorCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </controls:ColorPicker>
                                    <Slider Header="Size:" Margin="5" Width="250" Minimum="1" Maximum="50" Value="10">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.SizeLineSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                    <Slider Margin="5" Header="Opacity:" Width="250" Minimum="0" Maximum="1" Value="1" StepFrequency="0.05">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.OpacityLineSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                </StackPanel>
                            </Flyout>
                        </ToggleSplitButton.Flyout>
                    </ToggleSplitButton>
                    <ToggleSplitButton CornerRadius="4" Margin="4, 0, 0, 0" x:Name="EllipseToggle" Tag="Ellipse"  Command="{x:Bind ViewModel.EllipseCommand}" IsChecked="{Binding Ellipse, Mode=TwoWay}" Background="Transparent">
                        <icons:FluentIconElement Symbol="Circle24" />
                        <ToggleSplitButton.Flyout>
                            <Flyout Placement="Bottom">
                                <StackPanel>
                                    <!-- Two way means the viewmodel bool gets updated by the view-->
                                    <controls:ColorPicker Background="Transparent" Color="{x:Bind ViewModel.EllipseColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ColorChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.EllipseColorCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </controls:ColorPicker>
                                    <Slider Header="Size:" Margin="5" Width="250" Minimum="1" Maximum="50" Value="10">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.SizeEllipseSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                    <Slider Margin="5" Header="Opacity:" Width="250" Minimum="0" Maximum="1" Value="1" StepFrequency="0.05">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.OpacityEllipseSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                </StackPanel>
                            </Flyout>
                        </ToggleSplitButton.Flyout>
                    </ToggleSplitButton>
                    <AppBarSeparator/>
                    <ToggleSplitButton CornerRadius="4" x:Name="UnderlineToggle" Margin="0, 0, 4, 0" Tag="Underline"  Command="{x:Bind ViewModel.UnderlineCommand}" IsChecked="{Binding Underline, Mode=TwoWay}" Background="Transparent">
                        <icons:FluentIconElement Symbol="TextUnderline24" />
                        <ToggleSplitButton.Flyout>
                            <Flyout Placement="Bottom">
                                <StackPanel>
                                    <!-- Two way means the viewmodel bool gets updated by the view-->
                                    <controls:ColorPicker Background="Transparent" Color="{x:Bind ViewModel.UnderlineColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ColorChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.UnderlineColorCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </controls:ColorPicker>
                                    <Slider Margin="5" Header="Opacity:" Width="250" Minimum="0" Maximum="1" Value="1" StepFrequency="0.05">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.OpacityUnderlineSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                </StackPanel>
                            </Flyout>
                        </ToggleSplitButton.Flyout>
                    </ToggleSplitButton>
                    <ToggleSplitButton CornerRadius="4" Margin="4, 0, 4, 0" x:Name="StrikeoutToggle" Tag="Strikeout"  Command="{x:Bind ViewModel.StrikeoutCommand}" IsChecked="{Binding Strikeout, Mode=TwoWay}" Background="Transparent">
                        <icons:FluentIconElement Symbol="TextStrikethrough24" />
                        <ToggleSplitButton.Flyout>
                            <Flyout Placement="Bottom">
                                <StackPanel>
                                    <!-- Two way means the viewmodel bool gets updated by the view-->
                                    <controls:ColorPicker Background="Transparent" Color="{x:Bind ViewModel.StrikeoutColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ColorChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.StrikeoutColorCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </controls:ColorPicker>
                                    <Slider Margin="5" Header="Opacity:" Width="250" Minimum="0" Maximum="1" Value="1" StepFrequency="0.05">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.OpacityStrikeoutSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                </StackPanel>
                            </Flyout>
                        </ToggleSplitButton.Flyout>
                    </ToggleSplitButton>
                    <ToggleSplitButton Margin="4, 0, 0, 0" CornerRadius="4" x:Name="highlightToggle" Tag="highlight"  Command="{x:Bind ViewModel.highlightCommand}" IsChecked="{Binding highlight, Mode=TwoWay}" Background="Transparent">
                        <icons:FluentIconElement Symbol="Highlight24" />
                        <ToggleSplitButton.Flyout>
                            <Flyout Placement="Bottom">
                                <StackPanel>
                                    <!-- Two way means the viewmodel bool gets updated by the view-->
                                    <controls:ColorPicker Background="Transparent" Color="{x:Bind ViewModel.highlightColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ColorChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.highlightColorCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </controls:ColorPicker>
                                    <Slider Margin="5" Header="Opacity:" Width="250" Minimum="0" Maximum="1" Value="1" StepFrequency="0.05">
                                        <i:Interaction.Behaviors>
                                            <icore:EventTriggerBehavior EventName="ValueChanged">
                                                <icore:InvokeCommandAction Command="{x:Bind ViewModel.OpacityHighlightSliderCommand}" />
                                            </icore:EventTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                </StackPanel>
                            </Flyout>
                        </ToggleSplitButton.Flyout>
                    </ToggleSplitButton>
                    <AppBarSeparator/>
                    <Button Command="{Binding ElementName=pdfViewer, Path=ClearAllAnnotationsCommand}" Background="Transparent">
                        <Button.Content>
                                <icons:FluentIconElement Symbol="Delete20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Button.Content>
                            <Button.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.ThemeDictionaries>
                                        <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="Transparent"/>
                                            <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#333333"/>
                                            <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{StaticResource SystemAccentColor}"/>
                                    </ResourceDictionary>
                                        <ResourceDictionary x:Key="Light">
                                            <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#6bbdef"/>
                                            <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="White"/>

                                        </ResourceDictionary>
                                    </ResourceDictionary.ThemeDictionaries>
                                </ResourceDictionary>
                            </Button.Resources>
                        </Button>
             
                    <!--Binding is used because x:bind causes bugs with twoway dependancy property-->
                </StackPanel>
            </PivotItem>
            <Pivot.RightHeader>
                <controls:DropShadowPanel
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BlurRadius="8"
                        IsMasked="True"
                        OffsetX="0"
                        OffsetY="6.54"
                        ShadowOpacity="0.46"
                        Color="Black">
                        <AutoSuggestBox x:Name="SearchBox" 
   QueryIcon="Find"
                                          Background="#282828"
                            BorderThickness="0"
                                        CornerRadius="4"
                            Foreground="{ThemeResource SystemBaseHighColor}"
                            PlaceholderText="Search"
                               Width="300"
                               Margin="4, 4, 30, 4">
                            <!-- Query submitted is an event so cant bind directly to a command. This code fixes it-->
                            <i:Interaction.Behaviors>
                                <icore:EventTriggerBehavior EventName="QuerySubmitted">
                                    <icore:InvokeCommandAction Command="{x:Bind ViewModel.SearchCommand}" />
                                </icore:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                            <!--Important styles for custom searchbox buttons-->
                            <AutoSuggestBox.Resources>
                                <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)" xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract6Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,6)"
    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives">
                                    <ResourceDictionary.ThemeDictionaries>

                                        <ResourceDictionary x:Key="Default">

                                            <contract7NotPresent:StaticResource x:Key="AutoSuggestBoxSuggestionsListBackground" ResourceKey="SystemControlBackgroundChromeMediumLowBrush" />

                                            <contract7NotPresent:StaticResource x:Key="AutoSuggestBoxSuggestionsListBorderBrush" ResourceKey="SystemControlForegroundChromeHighBrush" />

                                            <contract7Present:StaticResource x:Key="AutoSuggestBoxSuggestionsListDarkBackground" ResourceKey="SystemControlTransientBackgroundBrush" />

                                            <contract7Present:StaticResource x:Key="AutoSuggestBoxSuggestionsListBorderDarkBrush" ResourceKey="SystemControlTransientBorderBrush" />

                                            <StaticResource x:Key="AutoSuggestBoxLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />

                                            <x:Double x:Key="AutoSuggestBoxIconFontSize">12</x:Double>

                                        </ResourceDictionary>

                                        <ResourceDictionary x:Key="HighContrast">

                                            <StaticResource x:Key="AutoSuggestBoxSuggestionsListBackground" ResourceKey="SystemControlBackgroundChromeMediumLowBrush" />

                                            <contract7NotPresent:StaticResource x:Key="AutoSuggestBoxSuggestionsListBorderBrush" ResourceKey="SystemControlForegroundChromeHighBrush" />

                                            <contract7Present:StaticResource x:Key="AutoSuggestBoxSuggestionsListBorderHighContrastBrush" ResourceKey="SystemControlTransientBorderBrush" />

                                            <StaticResource x:Key="AutoSuggestBoxLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />

                                            <x:Double x:Key="AutoSuggestBoxIconFontSize">12</x:Double>

                                        </ResourceDictionary>

                                        <ResourceDictionary x:Key="Light">

                                            <contract7NotPresent:StaticResource x:Key="AutoSuggestBoxSuggestionsListBackground" ResourceKey="SystemControlBackgroundChromeMediumLowBrush" />

                                            <contract7NotPresent:StaticResource x:Key="AutoSuggestBoxSuggestionsListBorderBrush" ResourceKey="SystemControlForegroundChromeHighBrush" />

                                            <contract7Present:StaticResource x:Key="AutoSuggestBoxSuggestionsListLightBackground" ResourceKey="SystemControlTransientBackgroundBrush" />

                                            <contract7Present:StaticResource x:Key="AutoSuggestBoxSuggestionsListBorderLightBrush" ResourceKey="SystemControlTransientBorderBrush" />

                                            <StaticResource x:Key="AutoSuggestBoxLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />

                                            <x:Double x:Key="AutoSuggestBoxIconFontSize">12</x:Double>

                                        </ResourceDictionary>

                                    </ResourceDictionary.ThemeDictionaries>
                                    <Thickness x:Key="AutoSuggestBoxTopHeaderMargin">0,0,0,4</Thickness>
                                    <Style TargetType="TextBox" x:Key="AutoSuggestBoxTextBoxStyle">
                                        <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}" />
                                        <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}" />
                                        <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
                                        <Setter Property="Background" Value="#282828" />
                                        <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
                                        <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                                        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
                                        <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <Grid>
                                                        <Grid.Resources>
                                                            <Style x:Name="DeleteButtonStyle" TargetType="Button">

                                                                <Setter Property="Template">

                                                                    <Setter.Value>

                                                                        <ControlTemplate TargetType="Button">

                                                                            <Grid x:Name="ButtonLayoutGrid"

                                                BorderBrush="{ThemeResource TextControlButtonBorderBrush}"

                                                BorderThickness="{TemplateBinding BorderThickness}"

                                                Background="{ThemeResource TextControlButtonBackground}"

                                                contract7Present:CornerRadius="{TemplateBinding CornerRadius}"

                                                contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource RightCornerRadiusFilterConverter}}">

                                                                                <VisualStateManager.VisualStateGroups>

                                                                                    <VisualStateGroup x:Name="CommonStates">

                                                                                        <VisualState x:Name="Normal" />



                                                                                        <VisualState x:Name="PointerOver">

                                                                                            <Storyboard>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                            </Storyboard>

                                                                                        </VisualState>



                                                                                        <VisualState x:Name="Pressed">

                                                                                            <Storyboard>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                            </Storyboard>

                                                                                        </VisualState>



                                                                                        <VisualState x:Name="Disabled">

                                                                                            <Storyboard>

                                                                                                <DoubleAnimation Storyboard.TargetName="ButtonLayoutGrid"

                                                                    Storyboard.TargetProperty="Opacity"

                                                                    To="0"

                                                                    Duration="0" />

                                                                                            </Storyboard>

                                                                                        </VisualState>

                                                                                    </VisualStateGroup>

                                                                                </VisualStateManager.VisualStateGroups>

                                                                                <TextBlock x:Name="GlyphElement"

                                                    Foreground="{ThemeResource TextControlButtonForeground}"

                                                    VerticalAlignment="Center"

                                                    HorizontalAlignment="Center"

                                                    FontStyle="Normal"

                                                    Text="&#xE10A;"

                                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"

                                                    AutomationProperties.AccessibilityView="Raw" />

                                                                            </Grid>

                                                                        </ControlTemplate>

                                                                    </Setter.Value>

                                                                </Setter>

                                                            </Style>
                                                            <Style x:Name="DownButtonStyle" TargetType="Button">

                                                                <Setter Property="Template">

                                                                    <Setter.Value>

                                                                        <ControlTemplate TargetType="Button">

                                                                            <Grid x:Name="ButtonLayoutGrid"

                                                BorderBrush="{ThemeResource TextControlButtonBorderBrush}"

                                                BorderThickness="{TemplateBinding BorderThickness}"

                                                Background="{ThemeResource TextControlButtonBackground}"

                                                contract7Present:CornerRadius="{TemplateBinding CornerRadius}"

                                                contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource RightCornerRadiusFilterConverter}}">

                                                                                <VisualStateManager.VisualStateGroups>

                                                                                    <VisualStateGroup x:Name="CommonStates">

                                                                                        <VisualState x:Name="Normal" />



                                                                                        <VisualState x:Name="PointerOver">

                                                                                            <Storyboard>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                            </Storyboard>

                                                                                        </VisualState>



                                                                                        <VisualState x:Name="Pressed">

                                                                                            <Storyboard>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>


                                                                                            </Storyboard>

                                                                                        </VisualState>




                                                                                    </VisualStateGroup>

                                                                                </VisualStateManager.VisualStateGroups>

                                                                                <TextBlock x:Name="GlyphElement"

                                                    Foreground="{ThemeResource DefaultTextForegroundThemeBrush}"
                                                    VerticalAlignment="Center"

                                                    HorizontalAlignment="Center"

                                                    FontStyle="Normal"

                                                    Text="&#xE70E;"

                                                    FontFamily="{ThemeResource SymbolThemeFontFamily}" />

                                                                            </Grid>

                                                                        </ControlTemplate>

                                                                    </Setter.Value>

                                                                </Setter>

                                                            </Style>
                                                            <Style x:Name="UpButtonStyle" TargetType="Button">

                                                                <Setter Property="Template">

                                                                    <Setter.Value>

                                                                        <ControlTemplate TargetType="Button">

                                                                            <Grid x:Name="ButtonLayoutGrid"

                                                BorderBrush="{ThemeResource TextControlButtonBorderBrush}"

                                                BorderThickness="{TemplateBinding BorderThickness}"

                                                Background="{ThemeResource TextControlButtonBackground}"

                                                contract7Present:CornerRadius="{TemplateBinding CornerRadius}"

                                                contract7NotPresent:CornerRadius="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource RightCornerRadiusFilterConverter}}">

                                                                                <VisualStateManager.VisualStateGroups>

                                                                                    <VisualStateGroup x:Name="CommonStates">

                                                                                        <VisualState x:Name="Normal" />



                                                                                        <VisualState x:Name="PointerOver">

                                                                                            <Storyboard>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                            </Storyboard>

                                                                                        </VisualState>



                                                                                        <VisualState x:Name="Pressed">

                                                                                            <Storyboard>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>


                                                                                            </Storyboard>

                                                                                        </VisualState>




                                                                                    </VisualStateGroup>

                                                                                </VisualStateManager.VisualStateGroups>

                                                                                <TextBlock x:Name="GlyphElement"

                                                    Foreground="{ThemeResource DefaultTextForegroundThemeBrush}"
                                                    VerticalAlignment="Center"

                                                    HorizontalAlignment="Center"

                                                    FontStyle="Normal"

                                                    Text="&#xE70D;"

                                                    FontFamily="{ThemeResource SymbolThemeFontFamily}" />

                                                                            </Grid>

                                                                        </ControlTemplate>

                                                                    </Setter.Value>

                                                                </Setter>

                                                            </Style>
                                                            <Style x:Name="QueryButtonStyle" TargetType="Button">

                                                                <Setter Property="Template">

                                                                    <Setter.Value>

                                                                        <ControlTemplate TargetType="Button">

                                                                            <ContentPresenter x:Name="ContentPresenter"

                                                Background="{ThemeResource TextControlButtonBackground}"
                                                                                              
                                                                                              Foreground="{ThemeResource SystemAccentColorLight2}"

                                                contract7Present:BackgroundSizing="{TemplateBinding BackgroundSizing}"

                                                BorderBrush="{ThemeResource TextControlButtonBorderBrush}"

                                                BorderThickness="{TemplateBinding BorderThickness}"

                                                Content="{TemplateBinding Content}"

                                                ContentTemplate="{TemplateBinding ContentTemplate}"

                                                ContentTransitions="{TemplateBinding ContentTransitions}"

                                                FontSize="{ThemeResource AutoSuggestBoxIconFontSize}"

                                                Padding="{TemplateBinding Padding}"

                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"

                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"

                                                AutomationProperties.AccessibilityView="Raw">



                                                                                <VisualStateManager.VisualStateGroups>

                                                                                    <VisualStateGroup x:Name="CommonStates">

                                                                                        <VisualState x:Name="Normal" />



                                                                                        <VisualState x:Name="PointerOver">

                                                                                            <Storyboard>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                            </Storyboard>

                                                                                        </VisualState>



                                                                                        <VisualState x:Name="Pressed">

                                                                                            <Storyboard>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">

                                                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />

                                                                                                </ObjectAnimationUsingKeyFrames>

                                                                                            </Storyboard>

                                                                                        </VisualState>




                                                                                        <VisualState x:Name="Disabled">

                                                                                            <Storyboard>

                                                                                                <DoubleAnimation Storyboard.TargetName="ContentPresenter"

                                                                    Storyboard.TargetProperty="Opacity"

                                                                    To="0"

                                                                    Duration="0" />

                                                                                            </Storyboard>

                                                                                        </VisualState>

                                                                                    </VisualStateGroup>

                                                                                </VisualStateManager.VisualStateGroups>

                                                                            </ContentPresenter>

                                                                        </ControlTemplate>

                                                                    </Setter.Value>

                                                                </Setter>

                                                            </Style>
                                                        </Grid.Resources>
                                                        <VisualStateManager.VisualStateGroups>

                                                            <VisualStateGroup x:Name="CommonStates">



                                                                <VisualState x:Name="Disabled">



                                                                    <Storyboard>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                    </Storyboard>

                                                                </VisualState>

                                                                <VisualState x:Name="Normal" />



                                                                <VisualState x:Name="PointerOver">



                                                                    <Storyboard>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundPointerOver}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                    </Storyboard>

                                                                </VisualState>

                                                                <VisualState x:Name="Focused">



                                                                    <Storyboard>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundFocused}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderThickness">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderThemeThicknessFocused}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />

                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DownButton" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForeground}" />

                                                                        </ObjectAnimationUsingKeyFrames>
                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueryButton" Storyboard.TargetProperty="Foreground">

                                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForeground}" />

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                    </Storyboard>

                                                                </VisualState>



                                                            </VisualStateGroup>

                                                            <VisualStateGroup x:Name="ButtonStates">

                                                                <VisualState x:Name="ButtonVisible">



                                                                    <Storyboard>

                                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">

                                                                            <DiscreteObjectKeyFrame KeyTime="0">

                                                                                <DiscreteObjectKeyFrame.Value>

                                                                                    <Visibility>Visible</Visibility>

                                                                                </DiscreteObjectKeyFrame.Value>

                                                                            </DiscreteObjectKeyFrame>

                                                                        </ObjectAnimationUsingKeyFrames>

                                                                    </Storyboard>

                                                                </VisualState>

                                                                <VisualState x:Name="ButtonCollapsed" />



                                                            </VisualStateGroup>



                                                        </VisualStateManager.VisualStateGroups>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="*" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                    <Border x:Name="BorderElement"

                            Grid.Row="1"

                            Background="{TemplateBinding Background}"

                            BorderBrush="{TemplateBinding BorderBrush}"

                            BorderThickness="{TemplateBinding BorderThickness}"

                            Grid.ColumnSpan="5"

                            Grid.RowSpan="1"

                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"

                            contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}" />
                                                    <ContentPresenter x:Name="HeaderContentPresenter"

                            x:DeferLoadStrategy="Lazy"

                            Visibility="Collapsed"

                            Grid.Row="0"

                            Foreground="{ThemeResource TextControlHeaderForeground}"

                            Margin="{ThemeResource AutoSuggestBoxTopHeaderMargin}"

                            Grid.ColumnSpan="4"

                            Content="{TemplateBinding Header}"

                            ContentTemplate="{TemplateBinding HeaderTemplate}"

                            FontWeight="Normal"

                            TextWrapping="Wrap" />
                                                    <ScrollViewer x:Name="ContentElement"
                            Grid.Row="1"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                                                                      Grid.Column="1"
                            AutomationProperties.AccessibilityView="Raw"
                            ZoomMode="Disabled" />
                                                        <ContentControl x:Name="PlaceholderTextContentPresenter"
                            Grid.Row="1"
                            Foreground="{ThemeResource TextControlPlaceholderForeground}"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            Grid.Column="1"
                            Content="{TemplateBinding PlaceholderText}"
                            IsHitTestVisible="False" />
                                                        <Button x:Name="UpButton"
                            Grid.Row="1"
                                                                Click="UpButton_Click"
                            Style="{StaticResource UpButtonStyle}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            contract7Present:CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            IsTabStop="False"
                            Grid.Column="3"
                            FontSize="{TemplateBinding FontSize}"
                            MinWidth="34"
                            Width="{TemplateBinding Height}"
                            VerticalAlignment="Stretch"
                                                                AutomationProperties.AccessibilityView="Raw">
                                                        </Button>
                                                        <Button x:Name="DownButton"
                            Grid.Row="1"
                            Style="{StaticResource DownButtonStyle}"
                                                                Click="DownButton_Click"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            contract7Present:CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            IsTabStop="False"
                            Grid.Column="4"
                            FontSize="{TemplateBinding FontSize}"
                            MinWidth="34"
                            Width="{TemplateBinding Height}"
                            VerticalAlignment="Stretch"
                                                                AutomationProperties.AccessibilityView="Raw">
                                                        </Button>

                                                        <Button x:Name="DeleteButton"
                            Grid.Row="1"
                            Style="{StaticResource DeleteButtonStyle}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            contract7Present:CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                            IsTabStop="False"
                            Grid.Column="2"
                            Visibility="Collapsed"
                            FontSize="{TemplateBinding FontSize}"
                            MinWidth="34"
                            AutomationProperties.AccessibilityView="Raw"
                            VerticalAlignment="Stretch" />

                                                        <Button x:Name="QueryButton"
                            Grid.Row="1"
                            Style="{StaticResource QueryButtonStyle}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsTabStop="False"
                            Grid.Column="0"
                            FontSize="{TemplateBinding FontSize}"
                            MinWidth="34"
                            Width="{TemplateBinding Height}"
                            VerticalAlignment="Stretch"
                            AutomationProperties.AccessibilityView="Raw"/>
                                                        <contract7Present:ContentPresenter x:Name="DescriptionPresenter"
                            Grid.Row="2"
                            Grid.ColumnSpan="4"
                            Content="{TemplateBinding Description}"
                            x:Load="False"
                            Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}"
                            AutomationProperties.AccessibilityView="Raw" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style TargetType="AutoSuggestBox" BasedOn="{StaticResource DefaultAutoSuggestBoxStyle}" />
                                    <Style x:Key="DefaultAutoSuggestBoxStyle" TargetType="AutoSuggestBox">

                                        <Setter Property="VerticalAlignment" Value="Top" />

                                        <Setter Property="IsTabStop" Value="False" />

                                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />

                                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />

                                        <Setter Property="TextBoxStyle" Value="{StaticResource AutoSuggestBoxTextBoxStyle}" />

                                        <!--   <contract6Present:Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
        <contract7Present:Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />-->

                                        <Setter Property="primitives:AutoSuggestBoxHelper.KeepInteriorCornersSquare" Value="true"/>

                                        <Setter Property="Template">

                                            <Setter.Value>
                                                <ControlTemplate TargetType="AutoSuggestBox">
                                                    <Grid x:Name="LayoutRoot">

                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="Orientation">
                                                                <VisualState x:Name="Landscape" />
                                                                <VisualState x:Name="Portrait" />
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*" />
                                                        </Grid.RowDefinitions>
                                                        <TextBox x:Name="TextBox"
                            Style="{TemplateBinding TextBoxStyle}"
                            PlaceholderText="{TemplateBinding PlaceholderText}"
                            Header="{TemplateBinding Header}"
                            Width="{TemplateBinding Width}"
                            contract7Present:Description="{TemplateBinding Description}"
                            FontSize="{TemplateBinding FontSize}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontStretch="{TemplateBinding FontStretch}"
                            ScrollViewer.BringIntoViewOnFocusChange="False"
                            Canvas.ZIndex="0"
                            Margin="0"
                            DesiredCandidateWindowAlignment="BottomEdge"
                            UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"/>
                                                        <Popup x:Name="SuggestionsPopup">
                                                            <Border x:Name="SuggestionsContainer"
                                    Padding="{ThemeResource AutoSuggestListMargin}"
                                    BorderThickness="{ThemeResource AutoSuggestListBorderThemeThickness}"
                                    BorderBrush="{ThemeResource AutoSuggestBoxSuggestionsListBorderBrush}"
                                    Background="{ThemeResource AutoSuggestBoxSuggestionsListBackground}"
                                    CornerRadius="{ThemeResource OverlayCornerRadius}">
                                                                <Border.RenderTransform>
                                                                    <contract7NotPresent:TranslateTransform x:Name="UpwardTransform" />
                                                                </Border.RenderTransform>
                                                                <ListView
                                    x:Name="SuggestionsList"
                                    DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                    IsItemClickEnabled="True"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                    MaxHeight="{ThemeResource AutoSuggestListMaxHeight}"
                                    Margin="{ThemeResource AutoSuggestListPadding}">
                                                                    <ListView.ItemContainerTransitions>
                                                                        <contract7NotPresent:TransitionCollection />
                                                                    </ListView.ItemContainerTransitions>
                                                                </ListView>
                                                            </Border>
                                                        </Popup>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ResourceDictionary>
                            </AutoSuggestBox.Resources>
                        </AutoSuggestBox>
                    </controls:DropShadowPanel>
            </Pivot.RightHeader>
        </Pivot>

        <SplitView DisplayMode="Overlay" x:Name="SplitPdfView" OpenPaneLength="350" IsPaneOpen="{x:Bind BookMarkButton.IsChecked, Mode=OneWay, Converter={StaticResource NullBoolToBoolConverter}}" Background="{ThemeResource SystemControlAcrylicWindowBrush}" Grid.Row="1">
            <SplitView.Pane>
                <StackPanel>
                    <TextBlock HorizontalAlignment="Center" FontWeight="Bold" Margin="-125, 32, 32, 8" FontSize="24">Bookmarks</TextBlock>
                <TreeView x:Name="BookmarkView" Margin="-20, 0, 10, 0">
                    
                </TreeView>
                </StackPanel>
            </SplitView.Pane>
            <syncfusion:SfPdfViewerControl x:Name="pdfViewer" ViewMode="{x:Bind ViewBox.SelectedItem,  Converter={StaticResource stringToPageViewModeConverter}, Mode=OneWay}" Canvas.ZIndex="1" Height="1000" HorizontalAlignment="Right" ShowPageNumber="False">
            </syncfusion:SfPdfViewerControl>
        </SplitView>
    </Grid>
</Page>
